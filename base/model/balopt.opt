* This file holds options that are used to control model functionality,
* including extentions in the form of addons, and interplay between models.

* Note: in final version all relevant control settings will be indicated
* by an *!option statement, e.g. "*!option yes" and other instructions.

* Note: If you work with BUI, the above is mandatory.
* Moreover, the only way to enter a comment in this file
* is to use a '*' as the first character on the line;
* thus, you can not use e.g., $ontext..$offtext or /*..*/ or // or !!.
* Further, if you work with BUI, this file will not be $included into Balmorel.gms,
* instead the file Balopt.bui will be $included. See the description elsewhere.


* Debugging hints are available if you include feasiblity-ensuring variables.
* However, adding more variables will increase calculation time.
* Hence, if calculation time is an issue, it is recommended as default to not use them,
* and then, if the solver declares the problem infeasible, use them and resolve.
* Information of ... in the .log file?
$setglobal vqdebug
*!option yes



*===============================================================================
*===============================================================================
* Project and Case ID:
*===============================================================================
*===============================================================================

* PROJECTID is the identification of the Project.
* Convenient, and additioanally needed if results shall be compared among projects.
*
$setglobal PROJECTID
*!option !fixedvalue
*
*
* CASEID is the Case identification string. It can be assigned freely, however, if
* the case is a base case to which other cases should be compared the name should be
* BASE. Normally the model in the base directory will be called BASE while
* any variants will have names as appropriate. Model results in the form of GDX files
* (or Access MDBs) will have the CASEID as filename with the appropriate extension.
* Note that CASEID MUST be identical to folder name of the diretory holding the case.
*
$setglobal CASEID BASE
*!option !fixedvalue


*===============================================================================
*===============================================================================
* Model choices:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
* The following global variables concern the choice of model.
* If $Setglobal bb1 yes, the usual (S,T) time segments and no endogenous investment are chosen.
* If $Setglobal bb2 yes, the usual (S,T) time segments and endogenous investment are chosen.
* If $Setglobal bb3 yes, the no endogenous investment, forwards simulation is chosen.
* If $Setglobal bb4 yes, BB4 is chosen.
* Exactly one of the following Setgbobals must be assigned yes.
*
* bb1: use model BALBASE1: optimisation simultaneuosly for all (S,T) in a year, exogenous investments.
$setglobal bb1
*!option yes      !notif %BB2%==yes  !notif %BB3%==yes  !notif %BB4%==yes
* bb2: use model BALBASE2: optimisation simultaneuosly for all (S,T) in a year, exogenous and endogenous investments.
$setglobal bb2
*!option yes      !notif %BB1%==yes  !notif %BB3%==yes  !notif %BB4%==yes
* bb3: use model BALBASE3: optimisation of one season at a time, forwards through S, exogenous investments.
$setglobal bb3
*!option yes      !notif %BB1%==yes  !notif %BB2%==yes  !notif %BB4%==yes
$setglobal bb4 yes
*!option yes      !notif %BB1%==yes  !notif %BB2%==yes  !notif %BB3%==yes

* During test period for BB4 make comparisons between BB4 and BB1, BB2, BB3.
* The present implementation is for comparison of models (BB4 and one of BB1/BB2/BB3) with a single year (where results should be identical)
* Not finished yet, but useful
$setglobal testbb1234
*!option yes


*===============================================================================
*===============================================================================
* Basic models details and Addon modules:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
* The following global variables concern the choice of details in some of the models.
* Note that some of the choices are mutually dependent.

*-------- Seasonal rolling horizon  ---------
* Optimize seasons with a rolling horizon approach instead of all together.
*NOTE: This option is supposed to be combined with the option "import_results", which must contain information for all S and at least the first element in T
$setglobal RollingSeasons
*!option yes

SCALAR ROLLINGSEASONSNUMBER 'Number of seasons to be optimized at a time in each rolling season optimization';
ROLLINGSEASONSNUMBER= 1;

*-------- END: Seasonal rolling horizon  ---------

*-----------------------
*---- Investments ------

*---- Generation investments options----

* Permit investments in generation and storage capacity:
$setglobal TechInvest
*!option yes

SCALAR GINVESTSTART 'Year from which endogenous decisions in generation capacities are allowed' ;
GINVESTSTART= 2020;

*---- End: Generation investments options----

*---- Transmission investments options----

* Permit investments in transmission capacity:
$setglobal TransInvest
*!option yes

SCALAR XINVESTSTART 'Year from which endogenous decisions in transmission capacities are allowed' ;
XINVESTSTART= 2030;

*---- End: Transmission investments options----

*----END: Investments
*-----------------------

* Allow wind turbines to shut down  (BB1,BB2,BB3)
$setglobal WNDSHUTDOWN
*!option yes

* Allow curtailment of variable renewable energy generators  (BB4)
$setglobal VRESHUTDOWN yes
*!option yes

*-----------------------------------------------------------
*---------------HYDRO RESERVOIRS OPTIONS--------------------
*Interpretation of the seasonal level of hydro reservoirs (QHYRSSEQ)
$setglobal HYRS_AGG hydro_year_agg
*!option hydro_year_agg       !Text "The storage level of hydro reservoirs (QHYRSSEQ) will be scaled so the Seasons included in the optimization represent an annual behaviour"
*!option hydro_season_agg     !Text "The storage level of hydro reservoirs (QHYRSSEQ) will be scaled so the Seasons included in the optimization represent a  seasonal behaviour"

* Relax seasonal limits for hydropower storages when running the model with less than 26 seasons (in HYRSDATA.inc)
$setglobal RELAX_HYDROSTORAGE
*!option yes
*---------------END: HYDRO RESERVOIRS OPTIONS--------------
*----------------------------------------------------------

*-------------------------------------------------
*---- Timeseries scaling ------

$setglobal timeseries_scaling  usedtimesteps_timseries_scaling
*!option usedtimesteps_timseries_scaling   !Text  "Timeseries values are scaled linearly by the following factor: scaling factor = annual energy content / sum of the energy in the used part of the timeseries"
*!option full_timeseries_scaling           !Text  "Timeseries values are scaled linearly by the following factor: scaling factor = annual energy content / sum of the energy in the full timeseries"

*----END: Timeseries scaling
*-------------------------------------------------

*-------------------------------------------------
*---- Heat storage loading restrictions ------
*overall control variable heatsto_loading_rest must be 'yes' if any of the other heat storage loading restriction controls are:

$setglobal heatsto_loading_rest
*!option yes

*Heat storages are forbidden to load other heat storages (if option "yes", heat storages will not be allowed to load other heat storages)
$setglobal heatsto2heasto_rest
*!option yes

*Water tanks loading is restricted with the set IGHNOWT (if option "yes", technologies included in this set will not be allowed to load water tanks)
$setglobal watertank_loading_rest
*!option yes


*----END: Heat storage loading restrictions
*-----------------------------------------------

*-------------------------------------------------------------------------------
* The following global variables concern the choice of add-on modules to include.
* Include a module by assigning   yes .
* Note that some of the choices are mutually dependent.

* Presently some of the addons are commented out -
* they may or may not be working (at least with an appropriate data set),
* however, it has not been checked. Please take contact if problems.

* Combine two technologies to one to achieve e.g. multifuel characteristics.
$setglobal COMBTECH
*!option yes

* Set demands for hydrogen consumption and enable hydrogen technologies.
$Setglobal HYDROGEN
*!option yes

* Use stepwise linear fuel prices
$Setglobal STEPWISEPRICE

* Set a common maximum for fuels.
$Setglobal LIMITSFORFUELS
*!option yes

* Allow demand elasticity
$setglobal DFLEXQUANT
*!option yes

* Allow demand response
$setglobal DEMANDRESPONSE
*!option yes

* Permit exchange of electricity with third regions using a price interface (in contrast to X3FX) (TO-DO, TEST IT)
$setglobal X3V
*!option yes

* This variable includes addon for distric heating
$Setglobal FV
*!option yes

*
$setglobal POLICIES
*!option yes

* Grid tariffs on electricity use
$setglobal GRIDTARIFFS
*!option yes

* Taxes addon
$setglobal TAXES
*!option yes

*
$setglobal SYSTEMCOST
*!option yes

* PLANTCLOSURES indicates that technology is decomissioned on the basis of profitability. (OLD CODE, USE "DECOM" ADD-ON INSTEAD)
* When revenues can no longer cover both variable and fixed operating costs, capacity is decomissioned.
$setglobal PLANTCLOSURES
*!option yes

* Differentiate yield requirements for different technologies.
$setglobal YIELDREQUIREMENT
*!option yes

* Permit heat transmission between areas.
$setglobal HEATTRANS
*!option yes

* Renewable energy share in electricity generation.
$setglobal REShareE
*!option yes
*!notif %REShareEH%==yes
*
* Renewable energy share in heat generation.
$setglobal REShareEH
*!option yes
*!notif %REShareE%==yes


* Make investments in technologies only at specified capacities. (TO-DO, TEST IT)
$setglobal AGKNDISC
*!option yes
*!onlyif %BB2%==yes
*!onlyif %solvemip%==yes


* Use the flow-based capacity allocation methodology
$Setglobal FlowBased
*!option yes

* Set short storages to be inter- or intra-seasonal
* according to GDSTOINTERS in GDATA (default) or all or none
$setglobal stointers
*! option  default    Use as specified by GDSTOINTERS in GDATA
*! option  all        Let all storage technologies be inter-seasonal
*! option  none       Let no storage technologies be inter-seasonal (i.e., let all be intra-seasonal)


* Bypass of 'turbine' (electricity production) on backpressure units.
$setglobal bypass
*!option yes


*-----------------------TECHNOLOGY DECOMMISSIONING--------------------------------------------------------
* overall control variable DECOM must be 'yes' if any of the other decommissioning controls are.
$setglobal DECOM
*!option yes

*-------ENDOGENOUS CAPACITIES----------
* Note: If no option for endogenous capacities is activated, endogenous investments will not be decommissioned

* Adds Endogenous capacities will maximum stay in the system as much as their lifetimes:
$setglobal LIFETIME_DECOM_ENDO_G
*!option yes

* Adds Endogenous capacities can be decommissioned based on their profitability:
$setglobal ECONOMIC_DECOM_ENDO_G
*!option yes

* Adds Endogenous decommissioned endogenous capacities can be brought back to the energy system. To be combined with the other decommissioning options:
$setglobal REVERT_DECOM_ENDO_G
*!option yes

*--------END OF ENDOGENOUS CAPACITIES-----

*--------EXOGENOUS CAPACITIES------------
* Note: If either NO_DECOM_EXO_G, or LIFETIME_DECOM_EXO_G, or ECONOMIC_DECOM_EXO_Gor is activated, then the parameter GKFX will be recalculated so capacities only increase in the system.

SCALAR GDECOMEXOSTART 'Year from which endogenous decisions in decommissioning of exogenous generation capacities are allowed';
GDECOMEXOSTART= 2020;

SCALAR GDECOMEXOPOTSTART 'Starting year to calculate the yearly decommissioning capacity potential, i.e. exogenous decommissioning occuring before this year will not be considered' ;
GDECOMEXOPOTSTART= 2016;

* Adds No decommissioning of exogenous capacities will take place at all. The capacities in the recalculated GKFX will take place in the optimization
* Note: This option is not compatible with the other exogenous capacities decommissioning options.
$setglobal NO_DECOM_EXO_G
*!option yes

* Adds Exogenous capacities will maximum stay in the system as much as their lifetimes (or as much as political decissions suggest it, for instance), which should be represented in the yearly development of capacities of the input parameter GKFX:
$setglobal LIFETIME_DECOM_EXO_G
*!option yes

* Adds Exogenous capacities can be decommissioned based on their profitability:
$setglobal ECONOMIC_DECOM_EXO_G
*!option yes

* Adds Endogenous decommissioned exogenous capacities can be brought back to the energy system. To be combined with the other decommissioning options:
$setglobal REVERT_DECOM_EXO_G
*!option yes
*--------END OF ENDOGENOUS CAPACITIES-----
*-----------------------End of TECHNOLOGY DECOMMISSIONING--------------------------------------------------------


*-------------------- UNIT COMMITMENT -----------------------------------------------------------
* overall control variable UnitComm must be 'yes' if any of the other unit commitment controls are:

$setglobal UnitComm
*!option yes

* Adds minimal production-when-on:
$setglobal MINFUELCONS
*!option yes
* Adds respecting minimum off time of the capacities:
$setglobal MINSTARTUPTIME
*!option yes
* Adds respecting minimum on time of the capacities:
$setglobal MINSHUTDOWNTIME
*!option yes
* Adds ramping technical limitations and stepwise costs to the Power plants when-on:
$setglobal STEPWISE_RAMPING_UC
*!option ramp_const_cost !Text "With ramping constraints and ramping costs"
*!option ramp_const  !Text "With ramping constraints but without ramping costs"
*!option no_ramping  !Text "Neither ramping constraints nor ramping costs"

* Seasonal link is on for all UC options activated. This means that past seasons will influence future seasons.
* This option increases computanional time but assures continuity in the fuel consumption profile.
$setglobal SEASONALLINKUC
*!option yes

* The production interval is segmented into a number of disjunct pieces, each with its own costs: NOT IMPLEMENTED
$setglobal UnitCseg
*!option yes
*-------------------- End of UNIT COMMITMENT -----------------------------------------------------------

*--------------------STEPWISE RAMPING (LINEAR VERSION)-----------------------------------------------------------
* overall control variable Stepwise_ramping must be 'yes' if any of the other stepwise ramping controls are:
* This add-on is an alternative to Unit Commitment to model ramping constraints without using MIP. This add-on uses currently the relevant data and sets from the Unit Commitment add-on
* This add-on is not compatible with the Unit Commitment stepwiseramping option
* The use of this add-on togeter with the rest of options of Unit Commitment add-on has not been tested, so, unless tested, this add-on should not be activated if UnitComm is on.

$setglobal STEPWISE_RAMPING
*!option yes

* Seasonal ramping link is on. This means that the fuel consumption of the last element ot the set T of the set S will be linked to the first element of the set T of the set S+1.
* This option increases computanional time but assures continuity in the fuel consumption profile.
$setglobal SEASONALLINKRAMPING
*!option yes

*----------------END OF STEPWISE RAMPING (LINEAR VERSION)----------------------------------------------------------

* Calibrate the price side of electricity demand
$setglobal DEFPCALIB
*!option yes
*
* Calibrate the price side of heat demand
$setglobal DHFPCALIB
*!option yes

* In model Balbase4 (BB4) indicate the strategy for relative weighting of years
$setglobal bb4weighty shareYYY
*!option same       !Text "Use same weights for all Y"
*!option shareYYY   !Text "Years in YYY but not in Y are shared between two nearest (first and last years double the shared weight contribution)"

*===============================================================================
*===============================================================================
* Relative paths
*===============================================================================
*===============================================================================
* No choices, they must be set as shown. Note the format.
* They are to be used as illustrated below and elsewhere in the code.
*
$ifi not %system.filesys%==UNIX  $goto endofUNIXrelpaths
$setglobal relpathModel ""
*!fixedvalue
$setglobal relpathoutput "../output/"
*!fixedvalue
$setglobal relpathInputdata2GDX "../output/inputout/"
*!fixedvalue
$setglobal relpathtemp "../output/temp/"
*!fixedvalue
$label endofUNIXrelpaths

$ifi not %system.filesys%==MSNT  $goto endofMSNTrelpaths
$setglobal relpathModel ""
*!fixedvalue
$setglobal relpathoutput "..\output\"
*!fixedvalue
$setglobal relpathInputdata2GDX "..\output\inputout\"
*!fixedvalue
$setglobal relpathtemp "..\output\temp\"
*!fixedvalue
$label endofMSNTrelpaths

*===============================================================================
*===============================================================================
* Some interaction between models:
*===============================================================================
*===============================================================================

* The following options are related to interplay between models,
* e.g. one model output serving as input to another model.

* Overall control to export results so they can be used in future runs :
$Setglobal export_results
*!option yes

*--------------------------------------------
*--------------IMPORT OF RESULTS----------------
*--------------------------------------------
* Overall control to import results so they can be used in future runs:
*NOTE: In order for results to work fine, the set S used in the runs should be contained in the import results.
*NOTE: In order for results to work fine, the first element in set T of the import results should match the one used in the current run.
$Setglobal import_results
*!option yes

*------------ IMPORT OPTIONS ----------------

* ------------------HYDRO---------------------------------
* For this model run it is possible to use values found from previuos solutions to specify use of hydro power
$setglobal HYRSBB123 quant
*!option quant         !Text "Use seasonal quantities of hydro generation (from HYRSG.gdx??) in this run ('primal decomposition')"
*!option price         !Text "Use seasonal prices for hydro generation (from WATERVAL.gdx) in this run ('dual decomposition') (TBD)"
*!option quantprice    !Text "Use seasonal quantities and prices for hydro generation (from HYRSG.gdx?? and WATERVAL.gdx) in in this run (TBD)"
*!option none          !Text "Do not not use this hydro addon"


* ------------------ END OF HYDRO---------------------------------

*--------------------INTERSEASONAL STORAGE-----------------------------------------------------------
*Import Electricity storage contents at beginning of time segment (MWh) from previous runs for the first element in set T of each S
$Setglobal ADDELECSTORCONT
*!option yes

*Import Heat storage contents at beginning of time segment (MWh) from previous runs for the first element in set T of each S
$Setglobal ADDHEATSTORCONT
*!option yes
*--------------------END OF INVESTMENTS-----------------------------------------------------------


*--------------------INVESTMENTS AND DECOMMISSIONING-----------------------------------------------------------
*NOTE: The set Y should be the same in the optimization should be the same as the one in the import results.

*Import generation and storage technology capacity development from previous runs
$setglobal ADDTECHDEV
*!option yes

*Import transmission development from previous runs
$setglobal ADDTRANSDEV
*!option yes
*--------------------END OF INVESTMENTS-----------------------------------------------------------
*-------------------------------------------------------------------------------

*------------- END OF IMPORT OPTIONS ----------------
*--------------------------------------------
*--------------END OF IMPORT OF RESULTS----------------
*--------------------------------------------

* Options timeaggr control automatic aggregation of time segments (to be tested!!).
$setglobal timeaggr
*!option yes


*===============================================================================
*===============================================================================
* Output:
*===============================================================================
*===============================================================================

* ------------------------------------------------------------------------------
* Alternative presentations of input data
* ------------------------------------------------------------------------------

* It may be convenient under some circumstances to have the applied input data in other forms,
* this may be achieved by the following mechanism.

* Make a summary of the input data in text format to file inputout.out:
$setglobal inputdatatxt ""
*!option ""          !text do not make it
*!option yes         !text make it when solving
*!option yesnosolve  !text make it but do not solve


* Save the input data in gdx format for further processing by Gdx utilities,
* e.g. viewing (Gdxviewer), comparing (Gdxdiff), or transferring to other data formats like Excel or Access.
* Note that this will be done as a  compile time operation,
* such that only the 'direct' data definitions (and no assignments) are reflected.
$setglobal INPUTDATA2GDX
*!option yes


* Transfer the input data in gdx format to a Microsoft Access database  ../output/inputout/inputdataout.mdb:
$setglobal INPUTDATAGDX2MDB
*!option yes    !onlyif  %INPUTDATA2GDX%==yes
* Note: if you have established a link from another Access database to inputdataout.mdb
* close all tables in it before executing Balmorel in order to ensure updating of the links.

* Merge input data with the output into the gdx file %CASEID%.gdx
$setglobal MERGEINPUTDATA
*!option yes


* Transfer the input data in gdx format to Microsoft Excel format:
* NOTWORKING: presently.
$setglobal INPUTDATAGDX2XLS
*!option  yes


*-------------------------------------------------------------------------------
* Output from model solutions:
*-------------------------------------------------------------------------------

* A quick way to get (some of) the relevant information is to make a gdx file with all information.
* This option will provide unloading of all that is available at the end of Balmorel.gms.
*
$setglobal all_endofmodelgdx yes
*!option yes     !Save the file all_endofmodel.gdx to the model folder

* Print out welfare results
$Setglobal welfare
*!option yes

* Allow for limited printout of inputdata and results, as defined by files syminput.inc and symoutput.inc, respectively.
* Only in effect for BB3
$Setglobal limitedresults
*!option yes


* Make some output in text format to show some results of an execution.
* The detailed code for the writing of the files is given in /output/printout/printinc.
* Setting "yes" for PRINTFILES will make some standard printout files to folder /output/printout/.
$setglobal PRINTFILES
*!option yes

$setglobal OUTPUT_SUMMARY
*!option yes

* PRINTSEPARATOR is a single character used for separating columns in printfiles,
* convenient e.g. to use ';' for copy-paste to Excel.
$setglobal PRINTSEPARATOR ';'
*!option ' '
*!option ';'
*!option ','

*-------------------------------------------------------------------------------
* Results collection for the present case
*-------------------------------------------------------------------------------

* The following will establish a mechanism that will save annual optimization results
* from bb1 and bb2 (seasonal for bb3) as gdx files; at the end they may be merged to one gdx file.
* This merged file may then be transferred to an Access database or to Excel.
* It is to be seen in conjunction with saving annual results in file bb123.sim,
* which is accomplished using savepoint with value 1, cf '$Setglobal SAVEPOINTVALUE'.
*
* The following closely linked controls are used:
* SAVEPOINTVALUE, cf. above
* MERGESAVEPOINTRESULTS yes
* MERGEDSAVEPOINTRESULTS2MDB
* MERGEDSAVEPOINTRESULTS2SQLITE
* MERGEDSAVEPOINTRESULTS2XLS: presently not working, we are waiting for GAMS version 22.7, which has better support for this.
* MERGECASE/MERGEWITH
* DIFFCASE/DIFFWITH
*
* Savepoint: the GAMS command "Modelname.Savepoint=number;"
* The savepoint attribute tells GAMS to save a GDX file that contains the information on the current solution point.
* One can save the information from just the last solve or from every solve.
* The points that are saved can be used to provide an advanced basis, an integer program starting point or a NLP starting point.
* Numeric input is expected with the allowable numeric values being:
* 0 no point gdx file is to be saved
* 1 a point gdx file is to be saved from the last solve in the GAMS model
* 2 a point gdx file is to be saved from every solve in the GAMS model
* The value specified by $Setglobal SAVEPOINTVALUE will be used for savepoint.
* To be used with subsequent handling of output.
*
$setglobal SAVEPOINTVALUE 0
*!option 0
*!option 1   !mustif  %MERGESAVEPOINTRESULTS%==yes  !mustif  %MERGEDSAVEPOINTRESULTS2GDX%==yes   !mustif  %MERGEDSAVEPOINTRESULTS2XLS%==yes   !mustif not %MERGECASE%==none  !mustif not %DIFFCASE%==none
*!option 2   !text Note: nothing implemented nor tested, so do not use it.

* Use the $setglobal MERGESAVEPOINTRESULTS to choose whether to merge annual/seasonal results or not:
$setglobal MERGESAVEPOINTRESULTS
*!option yes  !onlyif  %SAVEPOINTVALUE%==1
* Note: make sure that it is possible to make the new merged gdx file,
* e.g. make sure that the file *.gdx is not open in another application (like GAMD IDE).
*
* Then prepare for the necessary details:
$ifi %system.filesys%==MSNT
$setglobal batfileMERGESAVEPOINTRESULTS %relpathModel%MERGESAVEPOINTRESULTS.bat
*!option !fixedvalue
$ifi %system.filesys%==MSNT
file     fileMERGESAVEPOINTRESULTSbat /  %batfileMERGESAVEPOINTRESULTS%  /;
$ifi %system.filesys%==MSNT
putclose fileMERGESAVEPOINTRESULTSbat;

$ifi %system.filesys%==UNIX
$setglobal bashfileMERGESAVEPOINTRESULTS %relpathModel%MERGESAVEPOINTRESULTS.sh
*!option !fixedvalue
$ifi %system.filesys%==UNIX
file fileMERGESAVEPOINTRESULTSbash / %bashfileMERGESAVEPOINTRESULTS% /;
$ifi %system.filesys%==UNIX
putclose fileMERGESAVEPOINTRESULTSbash;

$setglobal MERGEDSAVEPOINTRESULTS2MDB
*!option yes    !onlyif %SAVEPOINTVALUE%==1  !onlyif %MERGESAVEPOINTRESULTS%==yes

$setglobal MERGEDSAVEPOINTRESULTS2SQLITE
*!option yes    !onlyif %SAVEPOINTVALUE%==1  !onlyif %MERGESAVEPOINTRESULTS%==yes


*-------------------------------------------------------------------------------
* Comparison between Cases:
*-------------------------------------------------------------------------------

* The following will merge and/or compare two results.
* With  option MERGECASE is set to NONE this will be not be done, otherwise it will.
* If done, the result will be in the output folder of the present case in the form of a GDX file.
* With option MERGEDSAVEPOINTRESULTS2MDB" this may then be transferred to a MDB file.
* All output go to the output folder of the present case.
* Similar considerations for DIFFCASE.

$setglobal MERGECASE  none
*!option none  !text Comparison will not be made
*!option <case name>
* MERGEWITH defines the case with which to merge results.
$setglobal MERGEWITH CaseNonversioned
*!option <case name>   !mustif not %MERGECASE%==none

* The diff uses gdxdiff. The diffile only shows items that meaningfull can be compared,
* non-compared items are reported in the Balmorel.log file.
$setglobal DIFFCASE  none
*!option none  !text Comparison will not be made
*!option <case name>

$setglobal DIFFWITH CaseNonversioned
*!option none  !text Comparison will not be made
*!option <case name>  !mustif not %DIFFCASE%==none

* Then prepare for the necessary details:  TODO
file     fileMERGEWITHBASEbat /  %batfileMERGEWITHBASE%  /;
putclose fileMERGEWITHBASEbat;




*===============================================================================
*===============================================================================
* The model type's implication for solver type
*===============================================================================
*===============================================================================

* The model type has implications for the solver type.
* Classical model types are LP (Linear Programming), QP (Quadratic Programming), MIP (Mixed Integer Progtramming).
$setglobal SOLVEMIP
*!option yes
*!mustif %AGKNDISC%==yes
*!mustif %UnitComm%==yes



*===============================================================================
*===============================================================================
* Input data:
*===============================================================================
*===============================================================================

*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------
* Option semislash is used to control input data format for text files.
* With "$Setglobal semislash ;" the input files must include
* the declaration statement initially and must terminate with a "/;".
* With "$Setglobal semislash /" the input files do not contain this, but only data.
* Note that parameters and tables are identical declarations, however,
* when using "$Setglobal semislash /" make sure
* that the use of either "parameter" or "table" in Balmorel.gms for any data file
* corresponds to the data format used in the file.
* NOTE: Rev.3.03: Not fully implemented yet, you MUST use "$Setglobal semislash ;".
$setglobal semislash ";"
*!fixedvalue ;
**!option ;




* Domain overloading: The options specify the domain (indexes) that the identifiyer is declared on.
$setglobal GMINF_DOL YYY_CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal GMAXF_DOL YYY_CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal GEQF_DOL YYY_CCCRRRAAA_FFF
*!option  CCCRRRAAA_FFF
*!option  YYY_CCCRRRAAA_FFF
*
$setglobal XKRATE_DOL IRRRE_IRRRI_SSS
*!option  IRRRE_IRRRI
*!option  IRRRE_IRRRI_SSS
*!option  IRRRE_IRRRI_SSS_TTT
*
$setglobal GKRATE_DOL AAA_GGG_SSS
*!option  AAA_GGG_SSS
*!option  AAA_GGG_SSS_TTT

$setglobal WNDFLH_DOL AAA
*!option  AAA_GGG
*!option  AAA

$setglobal SOLEFLH_DOL AAA
*!option  AAA_GGG
*!option  AAA

$setglobal SOLHFLH_DOL AAA
*!option  AAA_GGG
*!option  AAA

$setglobal GWAVE_DOL AAA
*!option  AAA_GGG
*!option  AAA



*-------------------------------------------------------------------------------
* Active options will be reported to log file via file hellolog.inc
*-------------------------------------------------------------------------------


*-------------------------------------------------------------------------------
* End of Balopt.opt
*-------------------------------------------------------------------------------
