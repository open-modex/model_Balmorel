* File for addon testbb1234 for the Balmorel model


display infodisplay, "bb1234_varassign !! TODO";
*todo for bb4: lave unload også for svarende til VGKN, VxKN

$ifi %BB1%==yes $goto  doBB1andBB2
$ifi %BB2%==yes $goto  doBB1andBB2
$ifi %BB3%==yes display infodisplay, "Error: addon testbb1234 is not implemented for BB3 (message from bb1234_varassign)";    !! Large parts must be identical to BB1?
$ifi %BB3%==yes $goto  endoffile
$ifi %BB4%==yes $goto  doBB4

* BB1 and part of BB2 ==========================================================
$label doBB1andBB2

* Variables:
IBB1234_VOBJ.L                   = VOBJ.L;

IBB1234_VGE_T.L(Y,IA,G,S,T)      = VGE_T.L(ia,g,s,t);
IBB1234_VGE_T.LO(Y,IA,G,S,T)     = VGE_T.LO(ia,g,s,t);
IBB1234_VGE_T.UP(Y,IA,G,S,T)     = VGE_T.UP(ia,g,s,t);
IBB1234_VGE_T.M(Y,IA,G,S,T)      = VGE_T.M(ia,g,s,t);

IBB1234_VGH_T.L(Y,IA,G,S,T)      = VGH_T.L(ia,g,s,t);
IBB1234_VGH_T.LO(Y,IA,G,S,T)     = VGH_T.LO(ia,g,s,t);
IBB1234_VGH_T.UP(Y,IA,G,S,T)     = VGH_T.UP(ia,g,s,t);
IBB1234_VGH_T.M(Y,IA,G,S,T)      = VGH_T.M(ia,g,s,t);

*IBB1234_VDECOM(YYY,IA,G)  ?

IBB1234_VGF_T.L(Y,IA,G,S,T)      = VGF_T.L(IA,G,S,T);
IBB1234_VGF_T.LO(Y,IA,G,S,T)     = VGF_T.LO(IA,G,S,T);
IBB1234_VGF_T.UP(Y,IA,G,S,T)     = VGF_T.UP(IA,G,S,T);
IBB1234_VGF_T.M(Y,IA,G,S,T)      = VGF_T.M(IA,G,S,T);

IBB1234_VX_T.L(Y,IRE,IRI,S,T)    = VX_T.L(IRE,IRI,S,T);
IBB1234_VX_T.LO(Y,IRE,IRI,S,T)   = VX_T.LO(IRE,IRI,S,T);
IBB1234_VX_T.UP(Y,IRE,IRI,S,T)   = VX_T.UP(IRE,IRI,S,T);
IBB1234_VX_T.M(Y,IRE,IRI,S,T)    = VX_T.M(IRE,IRI,S,T);

$ifi %dflexquant%==yes IBB1234_VDEF_T.L(Y,IR,DEUSER,S,T,DEF)   = VDEF_T.L(IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.LO(Y,IR,DEUSER,S,T,DEF)  = VDEF_T.LO(IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.UP(Y,IR,DEUSER,S,T,DEF)  = VDEF_T.UP(IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.M(Y,IR,DEUSER,S,T,DEF)   = VDEF_T.M(IR,DEUSER,S,T,DEF);

$ifi %dflexquant%==yes IBB1234_VDHF_T.L(Y,IA,DHUSER,S,T,DHF)   = VDHF_T.L(IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.LO(Y,IA,DHUSER,S,T,DHF)  = VDHF_T.LO(IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.UP(Y,IA,DHUSER,S,T,DHF)  = VDHF_T.UP(IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.M(Y,IA,DHUSER,S,T,DHF)   = VDHF_T.M(IA,DHUSER,S,T,DHF);

*IBB1234_VGHYPMS_T.L(Y,IA,S,T)   = VGHYPMS_T.L(IA,S,T);    (Contents of pumped hydro storage (MWh))     TODO: handle that no values assigned (if VGHYPMS_T is at all to be there)
*IBB1234_VGHYPMS_T.LO(Y,IA,S,T)  = VGHYPMS_T.LO(IA,S,T);
*IBB1234_VGHYPMS_T.UP(Y,IA,S,T)  = VGHYPMS_T.UP(IA,S,T);
*IBB1234_VGHYPMS_T.M(Y,IA,S,T)   = VGHYPMS_T.M(IA,S,T);

IBB1234_VHYRS_S.L(Y,IA,S)        = VHYRS_S.L(IA,S);
IBB1234_VHYRS_S.LO(Y,IA,S)       = VHYRS_S.LO(IA,S);
IBB1234_VHYRS_S.UP(Y,IA,S)       = VHYRS_S.UP(IA,S);
IBB1234_VHYRS_S.M(Y,IA,S)        = VHYRS_S.M(IA,S);

IBB1234_VESTOLOADT.L(Y,IA,S,T)   = VESTOLOADT.L(IA,S,T);
IBB1234_VESTOLOADT.LO(Y,IA,S,T)  = VESTOLOADT.LO(IA,S,T);
IBB1234_VESTOLOADT.UP(Y,IA,S,T)  = VESTOLOADT.UP(IA,S,T);
IBB1234_VESTOLOADT.M(Y,IA,S,T)   = VESTOLOADT.M(IA,S,T);

IBB1234_VESTOLOADTS.L(Y,IA,S,T)  = VESTOLOADTS.L(IA,S,T);
IBB1234_VESTOLOADTS.LO(Y,IA,S,T) = VESTOLOADTS.LO(IA,S,T);
IBB1234_VESTOLOADTS.UP(Y,IA,S,T) = VESTOLOADTS.UP(IA,S,T);
IBB1234_VESTOLOADTS.M(Y,IA,S,T)  = VESTOLOADTS.M(IA,S,T);

IBB1234_VHSTOLOADT.L(Y,IA,S,T)   = VHSTOLOADT.L(IA,S,T);
IBB1234_VHSTOLOADT.LO(Y,IA,S,T)  = VHSTOLOADT.LO(IA,S,T);
IBB1234_VHSTOLOADT.UP(Y,IA,S,T)  = VHSTOLOADT.UP(IA,S,T);
IBB1234_VHSTOLOADT.M(Y,IA,S,T)   = VHSTOLOADT.M(IA,S,T);

IBB1234_VHSTOLOADTS.L(Y,IA,S,T)  = VHSTOLOADTS.L(IA,S,T);
IBB1234_VHSTOLOADTS.LO(Y,IA,S,T) = VHSTOLOADTS.LO(IA,S,T);
IBB1234_VHSTOLOADTS.UP(Y,IA,S,T) = VHSTOLOADTS.UP(IA,S,T);
IBB1234_VHSTOLOADTS.M(Y,IA,S,T)  = VHSTOLOADTS.M(IA,S,T);

IBB1234_VESTOVOLT.L(Y,IA,S,T)    = VESTOVOLT.L(IA,S,T);
IBB1234_VESTOVOLT.LO(Y,IA,S,T)   = VESTOVOLT.LO(IA,S,T);
IBB1234_VESTOVOLT.UP(Y,IA,S,T)   = VESTOVOLT.UP(IA,S,T);
IBB1234_VESTOVOLT.M(Y,IA,S,T)    = VESTOVOLT.M(IA,S,T);

IBB1234_VESTOVOLTS.L(Y,IA,S,T)   = VESTOVOLTS.L(IA,S,T);
IBB1234_VESTOVOLTS.LO(Y,IA,S,T)  = VESTOVOLTS.LO(IA,S,T);
IBB1234_VESTOVOLTS.UP(Y,IA,S,T)  = VESTOVOLTS.UP(IA,S,T);
IBB1234_VESTOVOLTS.M(Y,IA,S,T)   = VESTOVOLTS.M(IA,S,T);

IBB1234_VHSTOVOLT.L(Y,IA,S,T)    = VHSTOVOLT.L(IA,S,T);
IBB1234_VHSTOVOLT.LO(Y,IA,S,T)   = VHSTOVOLT.LO(IA,S,T);
IBB1234_VHSTOVOLT.UP(Y,IA,S,T)   = VHSTOVOLT.UP(IA,S,T);
IBB1234_VHSTOVOLT.M(Y,IA,S,T)    = VHSTOVOLT.M(IA,S,T);

IBB1234_VHSTOVOLTS.L(Y,IA,S,T)   = VHSTOVOLTS.L(IA,S,T);
IBB1234_VHSTOVOLTS.LO(Y,IA,S,T)  = VHSTOVOLTS.LO(IA,S,T);
IBB1234_VHSTOVOLTS.UP(Y,IA,S,T)  = VHSTOVOLTS.UP(IA,S,T);
IBB1234_VHSTOVOLTS.M(Y,IA,S,T)   = VHSTOVOLTS.M(IA,S,T);

/*
IBB1234_VGKN.L(Y,IA,G)           =  VGKN.L(IA,G);
IBB1234_VGKN.LO(Y,IA,G)          =  VGKN.LO(IA,G);
IBB1234_VGKN.UP(Y,IA,G)          =  VGKN.UP(IA,G);
IBB1234_VGKN.M(Y,IA,G)           =  VGKN.M(IA,G);

IBB1234_VXKN.L(Y,IRE,IRI)        = VXKN.L(IRE,IRI);
IBB1234_VXKN.LO(Y,IRE,IRI)       = VXKN.LO(IRE,IRI);
IBB1234_VXKN.UP(Y,IRE,IRI)       = VXKN.UP(IRE,IRI);
IBB1234_VXKN.M(Y,IRE,IRI)        = VXKN.M(IRE,IRI);
*/

IBB1234_VGKN.L(Y,IA,G)           = 0;  !! Kind of dummy, nice for GDXDiff with BB4
IBB1234_VXKN.L(Y,IRE,IRI)        = 0;  !! Kind of dummy, nice for GDXDiff with BB4


* Equations slack vars:
BB1234_VQEEQ.L(Y,IR,S,T,IPLUSMINUS) =  VQEEQ.L(IR,S,T,IPLUSMINUS);
BB1234_VQHEQ.L(Y,IA,S,T,IPLUSMINUS) =  VQHEQ.L(IA,S,T,IPLUSMINUS);

/* todo more slack vars as above
IBB1234_VQESTOVOLT(Y,IA,S,T,IPLUSMINUS)
IBB1234_VQESTOVOLTS(Y,IA,S,T,IPLUSMINUS)execute_unload "..\output\temp\testbb1234.gdx", IBB1234_VGE_T, IBB1234_VGH_T, VQEEQ, VQHEQ    ;
IBB1234_VQHSTOVOLT(Y,IA,S,T,IPLUSMINUS)
IBB1234_VQHSTOVOLTS(Y,IA,S,T,IPLUSMINUS)
*/

* TODO: main equations, .L and .M
BB1234_QEEQ.L(Y,IR,S,T) = QEEQ.L(IR,S,T);
BB1234_QEEQ.M(Y,IR,S,T) = QEEQ.M(IR,S,T);
BB1234_QHEQ.L(Y,IA,S,T) = QHEQ.L(IA,S,T);
BB1234_QHEQ.M(Y,IA,S,T) = QHEQ.M(IA,S,T);
                                            !! todo: more eqns




$ifi not %dflexquant%==yes execute_unload "..\..\simex\BB1234_BB1.gdx"  IBB1234_VOBJ IBB1234_VGKN IBB1234_VXKN   IBB1234_VGE_T  IBB1234_VGH_T  IBB1234_VGF_T  IBB1234_VX_T                                  IBB1234_VGHYPMS_T  IBB1234_VHYRS_S  IBB1234_VESTOLOADT IBB1234_VESTOLOADTS  IBB1234_VHSTOLOADT   IBB1234_VHSTOLOADTS   IBB1234_VESTOVOLT IBB1234_VESTOVOLTS  IBB1234_VHSTOVOLT    IBB1234_VHSTOVOLTS   BB1234_VQEEQ  BB1234_VQHEQ  BB1234_QEEQ BB1234_QHEQ ;
$ifi     %dflexquant%==yes execute_unload "..\..\simex\BB1234_BB1.gdx"  IBB1234_VOBJ IBB1234_VGKN IBB1234_VXKN   IBB1234_VGE_T  IBB1234_VGH_T  IBB1234_VGF_T  IBB1234_VX_T IBB1234_VDEF_T  IBB1234_VDHF_T   IBB1234_VGHYPMS_T  IBB1234_VHYRS_S  IBB1234_VESTOLOADT IBB1234_VESTOLOADTS  IBB1234_VHSTOLOADT   IBB1234_VHSTOLOADTS   IBB1234_VESTOVOLT IBB1234_VESTOVOLTS  IBB1234_VHSTOVOLT    IBB1234_VHSTOVOLTS   BB1234_VQEEQ  BB1234_VQHEQ  BB1234_QEEQ BB1234_QHEQ ;

$ifi %BB2%==yes $goto  domoreBB2

$goto endoffile

* BB2 ==========================================================================
$label domoreBB2

IBB1234_VGE_T.L(Y,IA,G,S,T)   = VGE_T.L(ia,g,s,t) + VGEN_T.L(ia,g,s,t);
*IBB1234_VGE_T.LO(Y,IA,G,S,T) = VGE_T.LO(ia,g,s,t); !! ?? + VGEN_T.LO(ia,g,s,t);
*IBB1234_VGE_T.UP(Y,IA,G,S,T) = VGE_T.UP(ia,g,s,t); !! ?? + VGEN_T.UP(ia,g,s,t);;
*IBB1234_VGE_T.M(Y,IA,G,S,T)  = VGE_T.M(ia,g,s,t); !! ??  + VGEN_T.LO(ia,g,s,t);;

IBB1234_VGH_T.L(Y,IA,G,S,T)   = VGH_T.L(ia,g,s,t) + VGHN_T.L(ia,g,s,t);
*IBB1234_VGH_T.LO(Y,IA,G,S,T) = VGH_T.LO(ia,g,s,t);
*IBB1234_VGH_T.UP(Y,IA,G,S,T) = VGH_T.UP(ia,g,s,t);
*IBB1234_VGH_T.M(Y,IA,G,S,T)  = VGH_T.M(ia,g,s,t);

IBB1234_VGKN.L(Y,IA,G)        =  VGKN.L(IA,G);
*IBB1234_VGKN.LO(Y,IA,G)      =  VGKN.LO(IA,G);    !! ??
*IBB1234_VGKN.UP(Y,IA,G)      =  VGKN.UP(IA,G);
*IBB1234_VGKN.M(Y,IA,G)       =  VGKN.M(IA,G);

IBB1234_VXKN.L(Y,IRE,IRI)     = VXKN.L(IRE,IRI);
*IBB1234_VXKN.LO(Y,IRE,IRI)   = VXKN.LO(IRE,IRI);
*IBB1234_VXKN.UP(Y,IRE,IRI)   = VXKN.UP(IRE,IRI);
*IBB1234_VXKN.M(Y,IRE,IRI)    = VXKN.M(IRE,IRI);

IBB1234_VGF_T.L(Y,IA,G,S,T)   = VGF_T.L(IA,G,S,T) + VGFN_T.L(IA,G,S,T);
*IBB1234_VGF_T.LO(Y,IA,G,S,T) = VGF_T.LO(IA,G,S,T);
*IBB1234_VGF_T.UP(Y,IA,G,S,T) = VGF_T.UP(IA,G,S,T);
*IBB1234_VGF_T.M(Y,IA,G,S,T)  = VGF_T.M(IA,G,S,T);


* TODO: main equations, .L and .M


execute_unload "..\..\simex\BB1234_BB2.gdx"  IBB1234_VOBJ IBB1234_VGKN IBB1234_VXKN  IBB1234_VGE_T  IBB1234_VGH_T  IBB1234_VGF_T  IBB1234_VX_T /*IBB1234_VDEF_T  IBB1234_VDHF_T */  IBB1234_VGHYPMS_T  IBB1234_VHYRS_S  IBB1234_VESTOLOADT IBB1234_VESTOLOADTS  IBB1234_VHSTOLOADT   IBB1234_VHSTOLOADTS   IBB1234_VESTOVOLT IBB1234_VESTOVOLTS  IBB1234_VHSTOVOLT  IBB1234_VHSTOVOLTS
  BB1234_VQEEQ  BB1234_VQHEQ  BB1234_QEEQ  BB1234_QHEQ
;

$goto endoffile

* BB3 ==========================================================================
$label doBB3

Not implemented yet

$goto endoffile

* BB4 ==========================================================================
$label doBB4

IBB1234_VOBJ.L                   = VOBJ.L;

IBB1234_VGE_T.L(Y,IA,G,S,T)      = VGE_T.L(Y,ia,g,s,t);
IBB1234_VGE_T.LO(Y,IA,G,S,T)     = VGE_T.LO(Y,ia,g,s,t);
IBB1234_VGE_T.UP(Y,IA,G,S,T)     = VGE_T.UP(Y,ia,g,s,t);
IBB1234_VGE_T.M(Y,IA,G,S,T)      = VGE_T.M(Y,ia,g,s,t);

IBB1234_VGH_T.L(Y,IA,G,S,T)      = VGH_T.L(Y,ia,g,s,t);
IBB1234_VGH_T.LO(Y,IA,G,S,T)     = VGH_T.LO(Y,ia,g,s,t);
IBB1234_VGH_T.UP(Y,IA,G,S,T)     = VGH_T.UP(Y,ia,g,s,t);
IBB1234_VGH_T.M(Y,IA,G,S,T)      = VGH_T.M(Y,ia,g,s,t);

IBB1234_VGF_T.L(Y,IA,G,S,T)      = VGF_T.L(Y,IA,G,S,T);
IBB1234_VGF_T.LO(Y,IA,G,S,T)     = VGF_T.LO(Y,IA,G,S,T);
IBB1234_VGF_T.UP(Y,IA,G,S,T)     = VGF_T.UP(Y,IA,G,S,T);
IBB1234_VGF_T.M(Y,IA,G,S,T)      = VGF_T.M(Y,IA,G,S,T);

IBB1234_VX_T.L(Y,IRE,IRI,S,T)    = VX_T.L(Y,IRE,IRI,S,T);
IBB1234_VX_T.LO(Y,IRE,IRI,S,T)   = VX_T.LO(Y,IRE,IRI,S,T);
IBB1234_VX_T.UP(Y,IRE,IRI,S,T)   = VX_T.UP(Y,IRE,IRI,S,T);
IBB1234_VX_T.M(Y,IRE,IRI,S,T)    = VX_T.M(Y,IRE,IRI,S,T);

IBB1234_VGKN.L(Y,IA,G)           = VGKN.L(Y,IA,G);
IBB1234_VGKN.LO(Y,IA,G)          = VGKN.LO(Y,IA,G);
IBB1234_VGKN.UP(Y,IA,G)          = VGKN.UP(Y,IA,G);
IBB1234_VGKN.M(Y,IA,G)           = VGKN.M(Y,IA,G);

IBB1234_VXKN.L(Y,IRE,IRI)        = VXKN.L(Y,IRE,IRI);
IBB1234_VXKN.LO(Y,IRE,IRI)       = VXKN.LO(Y,IRE,IRI);
IBB1234_VXKN.UP(Y,IRE,IRI)       = VXKN.UP(Y,IRE,IRI);
IBB1234_VXKN.M(Y,IRE,IRI)        = VXKN.M(Y,IRE,IRI);

/*     renamed option to dflexquant
$ifi %dflex%==yes  IBB1234_VDEF_T.L(Y,IR,S,T,DEF)   = VDEF_T.L(Y,IR,S,T,DEF);
$ifi %dflex%==yes  IBB1234_VDEF_T.LO(Y,IR,S,T,DEF)  = VDEF_T.LO(Y,IR,S,T,DEF);
$ifi %dflex%==yes  IBB1234_VDEF_T.UP(Y,IR,S,T,DEF)  = VDEF_T.UP(Y,IR,S,T,DEF);
$ifi %dflex%==yes  IBB1234_VDEF_T.M(Y,IR,S,T,DEF)   = VDEF_T.M(Y,IR,S,T,DEF);

$ifi %dflex%==yes  IBB1234_VDHF_T.L(Y,IA,S,T,DHF)   = VDHF_T.L(Y,IA,S,T,DHF);
$ifi %dflex%==yes  IBB1234_VDHF_T.LO(Y,IA,S,T,DHF)  = VDHF_T.LO(Y,IA,S,T,DHF);
$ifi %dflex%==yes  IBB1234_VDHF_T.UP(Y,IA,S,T,DHF)  = VDHF_T.UP(Y,IA,S,T,DHF);
$ifi %dflex%==yes  IBB1234_VDHF_T.M(Y,IA,S,T,DHF)   = VDHF_T.M(Y,IA,S,T,DHF);
*/
$ifi %dflexquant%==yes IBB1234_VDEF_T.L(Y,IR,DEUSER,S,T,DEF)   = VDEF_T.L(Y,IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.LO(Y,IR,DEUSER,S,T,DEF)  = VDEF_T.LO(Y,IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.UP(Y,IR,DEUSER,S,T,DEF)  = VDEF_T.UP(Y,IR,DEUSER,S,T,DEF);
$ifi %dflexquant%==yes IBB1234_VDEF_T.M(Y,IR,DEUSER,S,T,DEF)   = VDEF_T.M(Y,IR,DEUSER,S,T,DEF);

$ifi %dflexquant%==yes IBB1234_VDHF_T.L(Y,IA,DHUSER,S,T,DHF)   = VDHF_T.L(Y,IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.LO(Y,IA,DHUSER,S,T,DHF)  = VDHF_T.LO(Y,IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.UP(Y,IA,DHUSER,S,T,DHF)  = VDHF_T.UP(Y,IA,DHUSER,S,T,DHF);
$ifi %dflexquant%==yes IBB1234_VDHF_T.M(Y,IA,DHUSER,S,T,DHF)   = VDHF_T.M(Y,IA,DHUSER,S,T,DHF);


*IBB1234_VGHYPMS_T.L(Y,IA,S,T)    = VGHYPMS_T.L(Y,IA,S,T);         TODO: handle that no alues assigned
*IBB1234_VGHYPMS_T.LO(Y,IA,S,T)   = VGHYPMS_T.LO(Y,IA,S,T);
*IBB1234_VGHYPMS_T.UP(Y,IA,S,T)   = VGHYPMS_T.UP(Y,IA,S,T);
*IBB1234_VGHYPMS_T.M(Y,IA,S,T)    = VGHYPMS_T.M(Y,IA,S,T);

IBB1234_VHYRS_S.L(Y,IA,S)        = VHYRS_S.L(Y,IA,S);
IBB1234_VHYRS_S.LO(Y,IA,S)       = VHYRS_S.LO(Y,IA,S);
IBB1234_VHYRS_S.UP(Y,IA,S)       = VHYRS_S.UP(Y,IA,S);
IBB1234_VHYRS_S.M(Y,IA,S)        = VHYRS_S.M(Y,IA,S);

IBB1234_VESTOLOADT.L(Y,IA,S,T)   = VESTOLOADT.L(Y,IA,S,T);
IBB1234_VESTOLOADT.LO(Y,IA,S,T)  = VESTOLOADT.LO(Y,IA,S,T);
IBB1234_VESTOLOADT.UP(Y,IA,S,T)  = VESTOLOADT.UP(Y,IA,S,T);
IBB1234_VESTOLOADT.M(Y,IA,S,T)   = VESTOLOADT.M(Y,IA,S,T);

IBB1234_VESTOLOADTS.L(Y,IA,S,T)  = VESTOLOADTS.L(Y,IA,S,T);
IBB1234_VESTOLOADTS.LO(Y,IA,S,T) = VESTOLOADTS.LO(Y,IA,S,T);
IBB1234_VESTOLOADTS.UP(Y,IA,S,T) = VESTOLOADTS.UP(Y,IA,S,T);
IBB1234_VESTOLOADTS.M(Y,IA,S,T)  = VESTOLOADTS.M(Y,IA,S,T);

IBB1234_VHSTOLOADT.L(Y,IA,S,T)   = VHSTOLOADT.L(Y,IA,S,T);
IBB1234_VHSTOLOADT.LO(Y,IA,S,T)  = VHSTOLOADT.LO(Y,IA,S,T);
IBB1234_VHSTOLOADT.UP(Y,IA,S,T)  = VHSTOLOADT.UP(Y,IA,S,T);
IBB1234_VHSTOLOADT.M(Y,IA,S,T)   = VHSTOLOADT.M(Y,IA,S,T);

IBB1234_VHSTOLOADTS.L(Y,IA,S,T)  = VHSTOLOADTS.L(Y,IA,S,T);
IBB1234_VHSTOLOADTS.LO(Y,IA,S,T) = VHSTOLOADTS.LO(Y,IA,S,T);
IBB1234_VHSTOLOADTS.UP(Y,IA,S,T) = VHSTOLOADTS.UP(Y,IA,S,T);
IBB1234_VHSTOLOADTS.M(Y,IA,S,T)  = VHSTOLOADTS.M(Y,IA,S,T);

IBB1234_VESTOVOLT.L(Y,IA,S,T)    = VESTOVOLT.L(Y,IA,S,T);
IBB1234_VESTOVOLT.LO(Y,IA,S,T)   = VESTOVOLT.LO(Y,IA,S,T);
IBB1234_VESTOVOLT.UP(Y,IA,S,T)   = VESTOVOLT.UP(Y,IA,S,T);
IBB1234_VESTOVOLT.M(Y,IA,S,T)    = VESTOVOLT.M(Y,IA,S,T);

IBB1234_VESTOVOLTS.L(Y,IA,S,T)   = VESTOVOLTS.L(Y,IA,S,T);
IBB1234_VESTOVOLTS.LO(Y,IA,S,T)  = VESTOVOLTS.LO(Y,IA,S,T);
IBB1234_VESTOVOLTS.UP(Y,IA,S,T)  = VESTOVOLTS.UP(Y,IA,S,T);
IBB1234_VESTOVOLTS.M(Y,IA,S,T)   = VESTOVOLTS.M(Y,IA,S,T);

IBB1234_VHSTOVOLT.L(Y,IA,S,T)    = VHSTOVOLT.L(Y,IA,S,T);
IBB1234_VHSTOVOLT.LO(Y,IA,S,T)   = VHSTOVOLT.LO(Y,IA,S,T);
IBB1234_VHSTOVOLT.UP(Y,IA,S,T)   = VHSTOVOLT.UP(Y,IA,S,T);
IBB1234_VHSTOVOLT.M(Y,IA,S,T)    = VHSTOVOLT.M(Y,IA,S,T);

IBB1234_VHSTOVOLTS.L(Y,IA,S,T)   = VHSTOVOLTS.L(Y,IA,S,T);
IBB1234_VHSTOVOLTS.LO(Y,IA,S,T)  = VHSTOVOLTS.LO(Y,IA,S,T);
IBB1234_VHSTOVOLTS.UP(Y,IA,S,T)  = VHSTOVOLTS.UP(Y,IA,S,T);
IBB1234_VHSTOVOLTS.M(Y,IA,S,T)   = VHSTOVOLTS.M(Y,IA,S,T);

* todo: VQ variables
BB1234_VQEEQ.L(Y,IR,S,T,IPLUSMINUS) =  VQEEQ.L(Y,IR,S,T,IPLUSMINUS);
BB1234_VQHEQ.L(Y,IA,S,T,IPLUSMINUS) =  VQHEQ.L(Y,IA,S,T,IPLUSMINUS);



* TODO: main equations, .L and .M:
BB1234_QEEQ.L(Y,IR,S,T) = QEEQ.L(Y,IR,S,T);
BB1234_QEEQ.M(Y,IR,S,T) = QEEQ.M(Y,IR,S,T);
BB1234_QHEQ.L(Y,IA,S,T) = QHEQ.L(Y,IA,S,T);
BB1234_QHEQ.M(Y,IA,S,T) = QHEQ.M(Y,IA,S,T);



             !! and more, compare BB1



$ifi not %dflexquant%==yes execute_unload "..\..\simex\BB1234_BB4.gdx" IBB1234_VOBJ  IBB1234_VGE_T  IBB1234_VGH_T  IBB1234_VGF_T  IBB1234_VX_T  IBB1234_VGKN  IBB1234_VXKN                                  IBB1234_VGHYPMS_T  IBB1234_VHYRS_S  IBB1234_VESTOLOADT IBB1234_VESTOLOADTS  IBB1234_VHSTOLOADT   IBB1234_VHSTOLOADTS   IBB1234_VESTOVOLT IBB1234_VESTOVOLTS  IBB1234_VHSTOVOLT    IBB1234_VHSTOVOLTS   BB1234_VQEEQ  BB1234_VQHEQ  BB1234_QEEQ  BB1234_QHEQ;
$ifi     %dflexquant%==yes execute_unload "..\..\simex\BB1234_BB4.gdx" IBB1234_VOBJ  IBB1234_VGE_T  IBB1234_VGH_T  IBB1234_VGF_T  IBB1234_VX_T  IBB1234_VGKN  IBB1234_VXKN IBB1234_VDEF_T  IBB1234_VDHF_T   IBB1234_VGHYPMS_T  IBB1234_VHYRS_S  IBB1234_VESTOLOADT IBB1234_VESTOLOADTS  IBB1234_VHSTOLOADT   IBB1234_VHSTOLOADTS   IBB1234_VESTOVOLT IBB1234_VESTOVOLTS  IBB1234_VHSTOVOLT    IBB1234_VHSTOVOLTS   BB1234_VQEEQ  BB1234_VQHEQ  BB1234_QEEQ  BB1234_QHEQ;

$goto endoffile

$label endoffile



$ontext    -------------------------------------------------------------------------------

testing field etc.

IBB1234_VGF_T.L(Y,IA,G,S,T)      = VGF_T.L(Y,IA,G,S,T);
IBB1234_VGF_T.LO(Y,IA,G,S,T)     = VGF_T.LO(Y,IA,G,S,T);
IBB1234_VGF_T.UP(Y,IA,G,S,T)     = VGF_T.UP(Y,IA,G,S,T);
IBB1234_VGF_T.M(Y,IA,G,S,T)      = VGF_T.M(Y,IA,G,S,T);

IBB1234_VX_T.L(Y,IRE,IRI,S,T)    = VX_T.L(Y,IRE,IRI,S,T);
IBB1234_VX_T.LO(Y,IRE,IRI,S,T)   = VX_T.LO(Y,IRE,IRI,S,T);
IBB1234_VX_T.UP(Y,IRE,IRI,S,T)   = VX_T.UP(Y,IRE,IRI,S,T);
IBB1234_VX_T.M(Y,IRE,IRI,S,T)    = VX_T.M(Y,IRE,IRI,S,T);

IBB1234_VGKN.L(Y,IA,G)           = VGKN.L(Y,IA,G);
IBB1234_VGKN.LO(Y,IA,G)          = VGKN.LO(Y,IA,G);
IBB1234_VGKN.UP(Y,IA,G)          = VGKN.UP(Y,IA,G);
IBB1234_VGKN.M(Y,IA,G)           = VGKN.M(Y,IA,G);

IBB1234_VXKN.L(Y,IRE,IRI)        = VXKN.L(Y,IRE,IRI);
IBB1234_VXKN.LO(Y,IRE,IRI)       = VXKN.LO(Y,IRE,IRI);
IBB1234_VXKN.UP(Y,IRE,IRI)       = VXKN.UP(Y,IRE,IRI);
IBB1234_VXKN.M(Y,IRE,IRI)        = VXKN.M(Y,IRE,IRI);

IBB1234_VDEF_T.L(Y,IR,S,T,DEF)   = VDEF_T.L(Y,IR,S,T,DEF);
IBB1234_VDEF_T.LO(Y,IR,S,T,DEF)  = VDEF_T.LO(Y,IR,S,T,DEF);
IBB1234_VDEF_T.UP(Y,IR,S,T,DEF)  = VDEF_T.UP(Y,IR,S,T,DEF);
IBB1234_VDEF_T.M(Y,IR,S,T,DEF)   = VDEF_T.M(Y,IR,S,T,DEF);

IBB1234_VDHF_T.L(Y,IA,S,T,DHF)   = VDHF_T.L(Y,IA,S,T,DHF);
IBB1234_VDHF_T.LO(Y,IA,S,T,DHF)  = VDHF_T.LO(Y,IA,S,T,DHF);
IBB1234_VDHF_T.UP(Y,IA,S,T,DHF)  = VDHF_T.UP(Y,IA,S,T,DHF);
IBB1234_VDHF_T.M(Y,IA,S,T,DHF)   = VDHF_T.M(Y,IA,S,T,DHF);

*IBB1234_VGHYPMS_T.L(Y,IA,S,T)    = VGHYPMS_T.L(Y,IA,S,T);         TODO: handle that no alues assigned
*IBB1234_VGHYPMS_T.LO(Y,IA,S,T)   = VGHYPMS_T.LO(Y,IA,S,T);
*IBB1234_VGHYPMS_T.UP(Y,IA,S,T)   = VGHYPMS_T.UP(Y,IA,S,T);
*IBB1234_VGHYPMS_T.M(Y,IA,S,T)    = VGHYPMS_T.M(Y,IA,S,T);

IBB1234_VHYRS_S.L(Y,IA,S)        = VHYRS_S.L(Y,IA,S);
IBB1234_VHYRS_S.LO(Y,IA,S)       = VHYRS_S.LO(Y,IA,S);
IBB1234_VHYRS_S.UP(Y,IA,S)       = VHYRS_S.UP(Y,IA,S);
IBB1234_VHYRS_S.M(Y,IA,S)        = VHYRS_S.M(Y,IA,S);

IBB1234_VESTOLOADT.L(Y,IA,S,T)   = VESTOLOADT.L(Y,IA,S,T);
IBB1234_VESTOLOADT.LO(Y,IA,S,T)  = VESTOLOADT.LO(Y,IA,S,T);
IBB1234_VESTOLOADT.UP(Y,IA,S,T)  = VESTOLOADT.UP(Y,IA,S,T);
IBB1234_VESTOLOADT.M(Y,IA,S,T)   = VESTOLOADT.M(Y,IA,S,T);

IBB1234_VESTOLOADTS.L(Y,IA,S,T)  = VESTOLOADTS.L(Y,IA,S,T);
IBB1234_VESTOLOADTS.LO(Y,IA,S,T) = VESTOLOADTS.LO(Y,IA,S,T);
IBB1234_VESTOLOADTS.UP(Y,IA,S,T) = VESTOLOADTS.UP(Y,IA,S,T);
IBB1234_VESTOLOADTS.M(Y,IA,S,T)  = VESTOLOADTS.M(Y,IA,S,T);

IBB1234_VHSTOLOADT.L(Y,IA,S,T)   = VHSTOLOADT.L(Y,IA,S,T);
IBB1234_VHSTOLOADT.LO(Y,IA,S,T)  = VHSTOLOADT.LO(Y,IA,S,T);
IBB1234_VHSTOLOADT.UP(Y,IA,S,T)  = VHSTOLOADT.UP(Y,IA,S,T);
IBB1234_VHSTOLOADT.M(Y,IA,S,T)   = VHSTOLOADT.M(Y,IA,S,T);

IBB1234_VHSTOLOADTS.L(Y,IA,S,T)  = VHSTOLOADTS.L(Y,IA,S,T);
IBB1234_VHSTOLOADTS.LO(Y,IA,S,T) = VHSTOLOADTS.LO(Y,IA,S,T);
IBB1234_VHSTOLOADTS.UP(Y,IA,S,T) = VHSTOLOADTS.UP(Y,IA,S,T);
IBB1234_VHSTOLOADTS.M(Y,IA,S,T)  = VHSTOLOADTS.M(Y,IA,S,T);

IBB1234_VESTOVOLT.L(Y,IA,S,T)    = VESTOVOLT.L(Y,IA,S,T);
IBB1234_VESTOVOLT.LO(Y,IA,S,T)   = VESTOVOLT.LO(Y,IA,S,T);
IBB1234_VESTOVOLT.UP(Y,IA,S,T)   = VESTOVOLT.UP(Y,IA,S,T);
IBB1234_VESTOVOLT.M(Y,IA,S,T)    = VESTOVOLT.M(Y,IA,S,T);

IBB1234_VESTOVOLTS.L(Y,IA,S,T)   = VESTOVOLTS.L(Y,IA,S,T);
IBB1234_VESTOVOLTS.LO(Y,IA,S,T)  = VESTOVOLTS.LO(Y,IA,S,T);
IBB1234_VESTOVOLTS.UP(Y,IA,S,T)  = VESTOVOLTS.UP(Y,IA,S,T);
IBB1234_VESTOVOLTS.M(Y,IA,S,T)   = VESTOVOLTS.M(Y,IA,S,T);

IBB1234_VHSTOVOLT.L(Y,IA,S,T)    = VHSTOVOLT.L(Y,IA,S,T);
IBB1234_VHSTOVOLT.LO(Y,IA,S,T)   = VHSTOVOLT.LO(Y,IA,S,T);
IBB1234_VHSTOVOLT.UP(Y,IA,S,T)   = VHSTOVOLT.UP(Y,IA,S,T);
IBB1234_VHSTOVOLT.M(Y,IA,S,T)    = VHSTOVOLT.M(Y,IA,S,T);

IBB1234_VHSTOVOLTS.L(Y,IA,S,T)   = VHSTOVOLTS.L(Y,IA,S,T);
IBB1234_VHSTOVOLTS.LO(Y,IA,S,T)  = VHSTOVOLTS.LO(Y,IA,S,T);
IBB1234_VHSTOVOLTS.UP(Y,IA,S,T)  = VHSTOVOLTS.UP(Y,IA,S,T);
IBB1234_VHSTOVOLTS.M(Y,IA,S,T)   = VHSTOVOLTS.M(Y,IA,S,T);


-----------

alle bal-var med ny-invest:






$offtext
